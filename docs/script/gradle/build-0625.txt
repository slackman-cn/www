/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.4/samples
 *
 * gradle clean
 * gradle build
 */

import org.gradle.internal.os.OperatingSystem;

ext.UbuntuPackage = [
   wget: 'wget',
   zstd: 'zstd',
   wget2: 'wget',
]

ext.FedoraPackage = [
   wget: 'wget',
   zstd: 'zstd',
]

ext.SourceSpec = [
    Requires: ['wget', 'zstd', 'wget2']
]

ext.ToolchainSpec = [
    Deps: ['wge1', 'wget2'],
    Binary: ['wget', 'wget2'],
    Library: ['liba', 'libc'],
    UbuntuDeps: ['wget1', 'wget2'],
]



task preCheck {
	description 'Check Host OS and tools'

	onlyIf { OperatingSystem.current().isLinux() }

	doFirst {
        def notfound = []
        def ubuntu_packages = []
        def fedora_packages = []
        println "Command Require: ${SourceSpec.Command}"
        println '----------------'
        SourceSpec.Requires.eachWithIndex { cmd,i ->
            def proc = "which ${cmd}".execute()
            proc.waitFor()
            if (proc.exitValue() == 0) {
                println "Found: ${proc.text}"
            } else {
                println "Not Found: ${cmd}"
                notfound << cmd
                ubuntu_packages << (UbuntuPackage[cmd] ?: "<${cmd}>")
                fedora_packages << (FedoraPackage[cmd] ?: "<${cmd}>")
            }
        }
        println '----------------'
        if (notfound.size() != 0)  {
            println "Comman Not Found: ${notfound}"
            println "Recommend(ubuntu): sudo apt install ${ubuntu_packages.join(',')}"
            println "Recommend(fedora): sudo dnf install ${fedora_packages.join(',')}"
        }
	}

	doLast {
		println "Check Success"
	}
}


task clean(type: Delete) {
	delete rootProject.buildDir
}


task build(dependsOn: preCheck) {
     description = "Download & Build  source package."
     doFirst {
       println "download source file"
     }

     doLast {
       println "build source file {patch, configure, make, make install}"
       println "Build Success"
     }
}